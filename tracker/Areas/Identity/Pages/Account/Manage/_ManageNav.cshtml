@using Models
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) btn btn-dark" id="profile" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext) btn btn-dark" id="email" asp-page="./Email">Email</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) btn btn-dark text-white" id="change-password" asp-page="./ChangePassword">Password</a>
    </li>
    <!-- Add your additional navigation items here -->
</ul>


<script>
    // Add active class on click
    document.querySelectorAll('.nav-link').forEach(function (item) {
        item.addEventListener('click', function () {
            document.querySelectorAll('.nav-link').forEach(function (navItem) {
                navItem.classList.remove('active');
            });
            this.classList.add('active');
        });
    });
</script>