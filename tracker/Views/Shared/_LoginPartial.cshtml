@using Microsoft.AspNetCore.Identity


@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);

        <li class="nav-item">
            <form class="d-flex align-items-center">
                <a id="manage" class="text-dark mt-2 mr-4" style="padding:2px" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">My Account</a>
            </form>
        </li>

        <li class="nav-item">
            <form id="logoutForm" class="form-inline mt-1 d-flex align-items-center" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0 mt-0">Logout</button>
            </form>
        </li>
    }


else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
